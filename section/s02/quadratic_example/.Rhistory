?NA_integer_
expect_equal("a", "a")
testthat::expect_equal("a", "a")
testthat::expect_equal("a", "b")
help(package="testthat")
c(root1 = 0+i, root2 = 0-i)
c(root1 = 0+1i, root2 = 0-1i)
expect_equivalent(c(0+1i, 0-1i), c(root1 = 0+1i, root2 = 0-1i))
testthat::expect_equivalent(c(0+1i, 0-1i), c(root1 = 0+1i, root2 = 0-1i))
testthat::expect_equivalent(c(0-1i, 0+1i), c(root1 = 0+1i, root2 = 0-1i))
library(testthat)
expect_true(all(c(0+1i, 0-1i) %in% c(0+1i, 0-1i)))
expect_true(all(c(0+1i) %in% c(0+1i, 0-1i)))
expect_true(c(0+1i, 0-1i) %in% c(0+1i, 0-1i))
expect_true(all(c(0+1i, 0-1i) %in% c(0+1i)))
expect_true(all(c(0+1i, 0-1i) %in% c(0+1i, 0-1i)))
expect_true(all(c(0+1i) %in% c(0+1i, 0-1i)))
getwd()
setwd("quadratic_example")
?auto_test
auto_test(".", "tests/testthat")
auto_test(".", "tests/testthat")
getwd()
